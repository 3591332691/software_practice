<!-- 这边的namespace一定要写完整正确（Mapper接口全限定类名） -->
<mapper namespace="com.example.backend.mapper.BookMapper">
    <!-- 通过id查询书 -->
    <select id="findBookById" parameterType="int" resultType="com.example.Entity.Book">
        select * from book where id = #{id}
    </select>

    <!-- 查询所有书籍信息 -->
    <select id="getAllBooks" resultType="com.example.Entity.Book">
        SELECT * FROM users
    </select>

    <!--通过name查找一个list的用户，模糊匹配 TODO:这个可以用在书的查找上-->
    <select id="findUserByName" parameterType="java.lang.String" resultType="com.example.Entity.User">
        select * from user where name like '%${value}%'
    </select>

    <!--插入书籍信息-->
    <insert id="insertBook" parameterType="com.example.Entity.Book">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.String">
            select uuid()         <!--  这里是对于主键属性的id进行赋值 -->
        </selectKey>
        insert into user(id,username,password) values(#{id},#{username},#{password})
    </insert>

    <!--删除书籍信息-->
    <delete id="deleteBook" parameterType="java.lang.Integer">
        delete from book where id=#{id}
    </delete>

    <!-- 更新书籍信息 -->
    <update id="updateBook" parameterType="com.example.Entity.Book">
        UPDATE book SET username = #{username}, password = #{password} WHERE id = #{id}
    </update>
</mapper>
