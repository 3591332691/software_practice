{
    "case_name": "test_case_01",
    "run_time": "20240522 18:19:37",
    "test_type": "CaseTest",
    "case_doc": "\u7528\u4f8b\u7f16\u53f7\uff1a01\n\u7528\u4f8b\u63cf\u8ff0\uff1a\n\u6253\u5f00\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\uff0c\u9996\u9875\u53ef\u4ee5\u770b\u5230\u63a8\u8350\u5c0f\u8bf4\u5217\u8868\u3002\u70b9\u51fb\u5c0f\u8bf4\u5217\u8868\u4e2d\u7684\u67d0\u4e00\u672c\u4e66\u7c4d\uff0c\u53ef\u4ee5\u8df3\u8f6c\u81f3\n\u8be5\u5c0f\u8bf4\u8be6\u60c5\u9875\u3002\u70b9\u51fb\u5de6\u4e0a\u89d2\u56de\u9000\u6309\u94ae\uff0c\u8fd4\u56de\u9996\u9875\u3002\n\u4e3b\u8981\u6d4b\u8bd5\u529f\u80fd\u70b9\uff1a\n1. \u9996\u9875\u63a8\u8350\u5c0f\u8bf4\u5217\u8868\u3002\n2. \u63a8\u8350\u5217\u8868->\u4e66\u672c\u8be6\u60c5\u7684\u8df3\u8f6c\u3002\n3. \u4e66\u672c\u8be6\u60c5\u7684\u7684\u663e\u793a\u3002\n4. \u9875\u9762\u6808\u5927\u4e8e2\u65f6\u53ef\u4ee5\u70b9\u51fb\u56de\u9000\u6309\u94ae\u8fd4\u56de\u4e0a\u4e00\u9875\u3002\n\u9884\u671f\u7ed3\u679c\uff1a\n1. \u6253\u5f00\u5c0f\u7a0b\u5e8f\uff0c\u9996\u9875\u6b63\u5e38\u663e\u793a\uff0c\u63a8\u8350\u5c0f\u8bf4\u5217\u8868\u4e2d\u81f3\u5c11\u6709\u4e00\u672c\u5c0f\u8bf4\u3002\n2. \u70b9\u51fb\u5c0f\u8bf4\u5217\u8868\u4e2d\u7684\u67d0\u672c\u4e66\u7c4d\u540e\uff0c\u9875\u9762\u6b63\u5e38\u8df3\u8f6c\u81f3\u4e66\u672c\u8be6\u60c5\u9875\u3002\n3. \u4e66\u672c\u8be6\u60c5\u9875\u6b63\u5e38\u663e\u793a\uff0c\u4e14\u5c0f\u8bf4\u7b80\u4ecb\u3001\u5c01\u9762\u3001\u4f5c\u8005\u7b49\u4fe1\u606f\u88ab\u6b63\u5e38\u663e\u793a\u3002\n4. \u70b9\u51fb\u5de6\u4e0a\u89d2\u56de\u9000\u6309\u94ae\uff0c\u8fd4\u56de\u9996\u9875\u3002\n",
    "success": false,
    "failures": "Traceback (most recent call last):\n  File \"E:\\zfy\\anaconda3\\envs\\minium\\lib\\site-packages\\minium\\framework\\libs\\unittest\\case.py\", line 266, in testPartExecutor\n    yield\n  File \"E:\\zfy\\anaconda3\\envs\\minium\\lib\\site-packages\\minium\\framework\\libs\\unittest\\case.py\", line 351, in run\n    self._callTestMethod(testMethod)\n  File \"E:\\zfy\\anaconda3\\envs\\minium\\lib\\site-packages\\minium\\framework\\minitest.py\", line 704, in _callTestMethod\n    method()\n  File \"C:\\Users\\MSI-NB\\Desktop\\FILE\\YuFanWenShu\\\u836f\u5b66\\\u5927\u56db\u4e0b\\7 \u8f6f\u4ef6\u5b9e\u8df5\\novel\\novel-test\\caseTest\\Case_test.py\", line 59, in test_case_01\n    self.assertTrue(self.page.element_is_exists(self.selectors['NAVBAR']))\n  File \"E:\\zfy\\anaconda3\\envs\\minium\\lib\\site-packages\\minium\\framework\\assertbase.py\", line 58, in hook_assert\n    return src(self, *args, **kwargs)\nAssertionError: False is not true\n",
    "errors": "",
    "start_timestamp": 1716373177.8032854,
    "is_failure": true,
    "is_error": false,
    "module": "C:.Users.MSI-NB.Desktop.FILE.YuFanWenShu.\u836f\u5b66.\u5927\u56db\u4e0b.7 \u8f6f\u4ef6\u5b9e\u8df5.novel.novel-test.caseTest.Case_test",
    "package": "caseTest",
    "failed_line_num": 59,
    "device": {
        "system_info": {
            "batteryLevel": 95,
            "benchmarkLevel": -1,
            "brand": "devtools",
            "memorySize": 2048,
            "model": "iPhone 6/7/8",
            "system": "iOS 10.0.1",
            "platform": "devtools",
            "pixelRatio": 2,
            "safeArea": {
                "top": 20,
                "left": 0,
                "right": 375,
                "bottom": 667,
                "width": 375,
                "height": 647
            },
            "screenWidth": 375,
            "screenHeight": 667,
            "screenTop": 48,
            "windowWidth": 375,
            "windowHeight": 619,
            "statusBarHeight": 20,
            "version": "8.0.5",
            "language": "zh_CN",
            "SDKVersion": "2.25.3",
            "enableDebug": false,
            "fontSizeScaleFactor": 0.85,
            "fontSizeSetting": 15,
            "mode": "default",
            "host": {
                "env": "WeChat"
            },
            "bluetoothEnabled": true,
            "locationEnabled": true,
            "wifiEnabled": true,
            "locationReducedAccuracy": true,
            "albumAuthorized": true,
            "bluetoothAuthorized": true,
            "cameraAuthorized": true,
            "locationAuthorized": true,
            "microphoneAuthorized": true,
            "notificationAuthorized": true,
            "notificationAlertAuthorized": true,
            "notificationBadgeAuthorized": true,
            "notificationSoundAuthorized": true,
            "phoneCalendarAuthorized": true,
            "deviceOrientation": "portrait",
            "devicePixelRatio": 2
        }
    },
    "log_filename": "run.log",
    "error_type": "AssertionError",
    "error_value": "False is not true",
    "error_stages": [
        "testMethod"
    ],
    "screen_info": [
        {
            "name": "setup",
            "url": "/pages/index/index",
            "path": "images\\setup.png",
            "ts": 1716373177,
            "datetime": "2024-05-22 18:19:37",
            "use_region": false
        },
        {
            "name": "teardown",
            "url": "/pages/book-detail/index",
            "path": "images\\teardown.png",
            "ts": 1716373189,
            "datetime": "2024-05-22 18:19:49",
            "use_region": false
        }
    ],
    "step_info": [],
    "check_list": [],
    "assert_list": [
        {
            "name": "assertEqual",
            "ret": true,
            "msg": null
        },
        {
            "name": "assertTrue",
            "ret": true,
            "msg": null
        },
        {
            "name": "assertTrue",
            "ret": true,
            "msg": null
        },
        {
            "name": "assertTrue",
            "ret": true,
            "msg": null
        },
        {
            "name": "assertTrue",
            "ret": true,
            "msg": null
        },
        {
            "name": "assertIsNotNone",
            "ret": true,
            "msg": null
        },
        {
            "name": "assertTrue",
            "ret": true,
            "msg": null
        },
        {
            "name": "assertTrue",
            "ret": true,
            "msg": null
        },
        {
            "name": "assertTrue",
            "ret": true,
            "msg": null
        },
        {
            "name": "assertTrue",
            "ret": false,
            "msg": "False is not true"
        }
    ],
    "perf_data": "{\"startup\": 0, \"avg_cpu\": 0, \"max_cpu\": 0, \"cpu_data_list\": [], \"avg_mem\": 0, \"max_mem\": 0, \"mem_data_list\": [], \"avg_fps\": 0, \"min_fps_rt\": 0, \"fps_data_list\": [], \"fps_time_series_list\": [], \"cpu_time_series_list\": [], \"mem_time_series_list\": []}",
    "weapp_log_path": "weapp.log",
    "request_log_path": "request.log",
    "stop_timestamp": 1716373189.2136955,
    "appId": "",
    "appName": "",
    "source": {
        "code": [
            "    def test_case_01(self):\n",
            "        \"\"\"\n",
            "        \u7528\u4f8b\u7f16\u53f7\uff1a01\n",
            "\n",
            "        \u7528\u4f8b\u63cf\u8ff0\uff1a\n",
            "        \u6253\u5f00\u5fae\u4fe1\u5c0f\u7a0b\u5e8f\uff0c\u9996\u9875\u53ef\u4ee5\u770b\u5230\u63a8\u8350\u5c0f\u8bf4\u5217\u8868\u3002\u70b9\u51fb\u5c0f\u8bf4\u5217\u8868\u4e2d\u7684\u67d0\u4e00\u672c\u4e66\u7c4d\uff0c\u53ef\u4ee5\u8df3\u8f6c\u81f3\n",
            "        \u8be5\u5c0f\u8bf4\u8be6\u60c5\u9875\u3002\u70b9\u51fb\u5de6\u4e0a\u89d2\u56de\u9000\u6309\u94ae\uff0c\u8fd4\u56de\u9996\u9875\u3002\n",
            "\n",
            "        \u4e3b\u8981\u6d4b\u8bd5\u529f\u80fd\u70b9\uff1a\n",
            "        1. \u9996\u9875\u63a8\u8350\u5c0f\u8bf4\u5217\u8868\u3002\n",
            "        2. \u63a8\u8350\u5217\u8868->\u4e66\u672c\u8be6\u60c5\u7684\u8df3\u8f6c\u3002\n",
            "        3. \u4e66\u672c\u8be6\u60c5\u7684\u7684\u663e\u793a\u3002\n",
            "        4. \u9875\u9762\u6808\u5927\u4e8e2\u65f6\u53ef\u4ee5\u70b9\u51fb\u56de\u9000\u6309\u94ae\u8fd4\u56de\u4e0a\u4e00\u9875\u3002\n",
            "\n",
            "        \u9884\u671f\u7ed3\u679c\uff1a\n",
            "        1. \u6253\u5f00\u5c0f\u7a0b\u5e8f\uff0c\u9996\u9875\u6b63\u5e38\u663e\u793a\uff0c\u63a8\u8350\u5c0f\u8bf4\u5217\u8868\u4e2d\u81f3\u5c11\u6709\u4e00\u672c\u5c0f\u8bf4\u3002\n",
            "        2. \u70b9\u51fb\u5c0f\u8bf4\u5217\u8868\u4e2d\u7684\u67d0\u672c\u4e66\u7c4d\u540e\uff0c\u9875\u9762\u6b63\u5e38\u8df3\u8f6c\u81f3\u4e66\u672c\u8be6\u60c5\u9875\u3002\n",
            "        3. \u4e66\u672c\u8be6\u60c5\u9875\u6b63\u5e38\u663e\u793a\uff0c\u4e14\u5c0f\u8bf4\u7b80\u4ecb\u3001\u5c01\u9762\u3001\u4f5c\u8005\u7b49\u4fe1\u606f\u88ab\u6b63\u5e38\u663e\u793a\u3002\n",
            "        4. \u70b9\u51fb\u5de6\u4e0a\u89d2\u56de\u9000\u6309\u94ae\uff0c\u8fd4\u56de\u9996\u9875\u3002\n",
            "        \"\"\"\n",
            "        self.indexPage.check_indexPage_path()\n",
            "        self.indexPage.check_indexPage_base_element()\n",
            "        self.indexPage.get_first_book()\n",
            "        self.page.wait_for(\"page\")\n",
            "\n",
            "        self.bookDetailPage.check_bookDetailPage_base_element()\n",
            "\n",
            "        self.assertTrue(self.page.element_is_exists(self.selectors['NAVBAR']))\n",
            "        self.page.get_element(self.selectors['NAVBAR']).click()\n",
            "\n",
            "        self.indexPage.check_indexPage_path()\n",
            "        self.indexPage.check_indexPage_base_element()\n"
        ],
        "start": 32
    },
    "filename": "result.json"
}